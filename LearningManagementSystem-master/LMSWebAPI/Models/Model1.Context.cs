//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LMSWebAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LMSEntities1 : DbContext
    {
        public LMSEntities1()
            : base("name=LMSEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<CertifiedUser> CertifiedUsers { get; set; }
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<Enrollment> Enrollments { get; set; }
        public virtual DbSet<EnrollmentRequest> EnrollmentRequests { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Test> Tests { get; set; }
    
        public virtual ObjectResult<usp_coursecompletion_Result> usp_coursecompletion(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_coursecompletion_Result>("usp_coursecompletion", userNameParameter);
        }
    
        public virtual ObjectResult<usp_coursestatus_Result> usp_coursestatus(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_coursestatus_Result>("usp_coursestatus", userNameParameter);
        }
    
        public virtual int usp_EnrollUserToCourse(string userName, Nullable<int> courseID)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EnrollUserToCourse", userNameParameter, courseIDParameter);
        }
    
        public virtual ObjectResult<usp_learners_Result> usp_learners()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_learners_Result>("usp_learners");
        }
    
        public virtual ObjectResult<usp_MyProfile_Result> usp_MyProfile(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MyProfile_Result>("usp_MyProfile", userNameParameter);
        }
    
        public virtual ObjectResult<string> usp_MyTests(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_MyTests", userNameParameter);
        }
    
        public virtual ObjectResult<usp_name_Result> usp_name(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_name_Result>("usp_name", userNameParameter);
        }
    
        public virtual int usp_StoreCertificate(string userName, Nullable<int> courseID)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_StoreCertificate", userNameParameter, courseIDParameter);
        }
    
        public virtual ObjectResult<usp_Tests_Result> usp_Tests(string userName, Nullable<short> courseid)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Tests_Result>("usp_Tests", userNameParameter, courseidParameter);
        }
    
        public virtual ObjectResult<usp_viewcertificate_Result> usp_viewcertificate(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_viewcertificate_Result>("usp_viewcertificate", userNameParameter);
        }
    }
}
